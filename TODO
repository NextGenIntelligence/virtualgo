DONE:


TODO:

    -----------------------------------------------------------------------

    When finding the nearest point in the left edge case do the following:

    1. Test the primary plane, but ignore if point is outside bounds
    2. Test the side plane, but ignore if point is outside bounds
    3. Test the edge, by definition cannot be outside bounds

    -----------------------------------------------------------------------

    This means that I just need a function to find the nearest point
    on an infinite line to the biconvex

    Test both spheres vs. the line -- if the nearest point is on the 
    wrong side of the sphere, ignore it.

    Next, test the circle vs. the line. This is necessary because 
    a simple clamping of the nearest point on the sphere to the 
    circle Z and circle radius R is not going to always get the same point

    (Is this true? Come up with a case showing how this breaks...)

    -----------------------------------------------------------------------

    Argh... the wireframe is fucked up with z testing again... !

    -----------------------------------------------------------------------

    Implement corner cases for collision with board

    -----------------------------------------------------------------------

    Implement rolling and sliding friction

    -----------------------------------------------------------------------

    Implement mode with stone and board rendered in solid color

    Load texture for stone

    Render stone with murasaki texture

    Render board with wood texture

    Develop textures for grid lines and star points

    -----------------------------------------------------------------------

    Implement stone vs. stone collision

    -----------------------------------------------------------------------