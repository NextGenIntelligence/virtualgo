DONE:

TODO:

    Implement 3D hash grid for stone postitions

    Insert stone into grid bucket cells that the bounding
    sphere overlaps, so the testing is simpler.

    Keep track of the grid cells inside the stone so you can
    go both ways, eg. num cells, cell array.

    Visualize the grid cells a stone is in when a stone is selected

    Implement basic stone vs. stone collision detection using
    bounding spheres, purely linear.

    This should go surprisingly far to avoid stupid looking crap.

    Algorithm is to basically test against all other spheres in the
    current grid cell. I'm thinking grid cell resolution should be about
    cubes with side length of 3 or 4 stone bounding sphere radius.

    -----------------------------------------------------------------







    -----------------------------------------------------------------

    When a stone is moved, it should logically attach to a grid point

    Add a constraint to the grid point

    Add some UI element to toggle locked mode on/off

    When in locked mode, any stone that is not logically occupying
    a position on the logical board will be deleted in 5 secs.

    -----------------------------------------------------------------







    -----------------------------------------------------------------

    Why are the stones drifting even though gravity is down?!!!

    It seems that 10 iterations was hiding this issue.

    Stone is pulled down due to gravity then pushed out of the board,
    this creates movement that causes a sliding motion even when friction
    should stick.

    Perhaps when applying gravity to objects that are already in
    contact with the board or ground, they should do a static friction
    check before applying any component of gravity that isn't in the
    surface normal direction?

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Implement zoom in to point of double tap

    Clamp zoom in point to the board surface

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Idea the UI element can be frosted glass resting on the floor

    This would look AWESOME

    -----------------------------------------------------------------

    Add a square UI element that can be pressed to toggle locked mode

    To do this need:

    - ortho projection matrix
    - shader for UI elements (textured, with alpha)

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Implement a way to pick the stone up with two finger swipe
    towards the stone, this is something Evan Cho naturally tried
    to do, therefore it is intuitive and I should support it. 

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Board grid corners need special treatment, a corner texture to
    fix up the gap (otherwise it does not get AA properly...!)

    -----------------------------------------------------------------

    Soften the edges of the go board by baking in some rounding,
    irregularity etc. They look super harsh and sharp right now!

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Instead of zooming in, maybe a second zoomed in view of the board
    can show while you are holding a touch past a certain point!!!

    This would also help fix the problem of not feeling confident
    about where you are placing the stone. 

    This should only show after an extended hold. It would be
    annoying if it would flick on and off.

    Would definitely help fix the FAT FINGERS feeling on ipad,
    if you can see under your finger, this is no longer an issue.

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Capture go stone diffuse textures

    Implement some way to swipe select between go stone textures

    Perhaps double swipe up/down -- I'd like to let the user
    mix and match go stones with different go boards.

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Capture go stone sounds

    Buy a microphone

    Research how to capture foley

    Need sound of stone hitting board with different variations

    Stone hitting metal for the sides of the frustum

    Stone hitting glass for the front screen

    -----------------------------------------------------------------

    Implement double swipe detection

    Double swipe left/right select between different go board 
    textures, eg. light, dark, red wood etc.

    -----------------------------------------------------------------









    -----------------------------------------------------------------

    Seems that hold sometimes does not trigger. Not sure why yet?
    It seems that touch began triggers, but somehow the hold doesn't
    kick in. Maybe the touch began but it doesn't know where?
    Anyway, this is reproduceable so can be fixed later.

    Pops occur in the corners/edges. Need iterative contacts.

    Blow into the microphone moves the stone up (iphone only)

    http://mobileorchard.com/tutorial-detecting-when-a-user-blows-into-the-mic/
    
    -----------------------------------------------------------------

    Prefer spin direction the stone is already spinning around on swipe

    If there is no existing rotation 

    -----------------------------------------------------------------

    The accelerometer not being accurate on side tilt is actually
    not true, it is caused by the frustum planes being not exactly
    flat.

    I'm not sure if I should do anything about this.

    I cannot clamp the value as I want tilting to work on side planes

    I could consider some sort of clamp to nearest plane normal
    concept if within some tolerence, this might be a good idea
    but would make sliding asymmetrical with the floor.

    -----------------------------------------------------------------

    Implement iterative solver for simultaneous constraints (eg. corners)

    -----------------------------------------------------------------
















    -----------------------------------------------------------------

    Move the video recording framework into Platform.h/cpp so
    it isn't cut & paste in every demo program!

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    --------------------------------------------------------
