DONE:

TODO:

    -----------------------------------------------------------------

    Convert to right handed coordinates

    Re-enable energy kinetic energy post-collision test

    -----------------------------------------------------------------

    Simplify go engine into a static library with a simple interface 
    that can be used to interface with other engines/projects.

    Move the library source into "source" directory.

    Move the test programs into "tests" subdirectory.

    Ideally, this would make it so that native code could be easily
    built into a static library then linked into some module in Loom.

    What would be best is if there was a simple library header
    to create a go simulation, specify the dimensions and so on

    Ideally, I would like to keep the model and the presentation
    layer separate, eg. model/view separation. This way I can keep
    the simulation layer unchanged even if I swap out a completely
    different render interface.

    Ideally, the render interface would be plug-inable and would
    support multiple board render methods, eg. wireframe, solid,
    textured etc. This is probably overkill.

    Leave the dynamic module separation up to the engine (eg. Loom)

    -----------------------------------------------------------------

    Port to iPad using Loom engine!

    Is it possible to get OpenGL display access using Loom? 

    If so then this is a pretty good way to get cool scriting
    and potential dynamic reloads working within an engine
    that should make it easier to port to android devices.

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    -----------------------------------------------------------------








    --------------------------------------------------------

    Need some way to adjust brightness because they grey
    board is likely to be difficult to see without turning
    the lights off on a projector

    --------------------------------------------------------

    For the proper demo of the board provide best camera
    angles (as minimal as possible) that support common
    views for playing.

    Basically, a top down view, a side-on view, and a zoom
    view which supports scrolling at an ideal distance back.

    This should be separate from the collision demo.

    --------------------------------------------------------

    When sliding the stone diagonal should not be faster
    than left/right/up/down
    
    --------------------------------------------------------

    Really need to add a blurry shadow to the go stone on
    the board. This will complete the visual look!

    --------------------------------------------------------

    If you through the go stone at the corner (and edge?)
    in some cases it's possible to get the stone to "bounce back"
    as if it hit some invisible wall.

    Is there some error in the push out logic?

    Or some error in the nearest point?

    --------------------------------------------------------

    Finish the article series

    Back port to talk slides

    --------------------------------------------------------

    Get polarized lense filters to remove stone highlight

    Rent a better camera

    Capture all go stone textures top and bottom

    Capture board texture kaya including sides

    Create Texture.h to manage sets of textures easily

    Switch to DDS files with offline mipmap generation

    --------------------------------------------------------
    