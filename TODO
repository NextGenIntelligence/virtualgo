DONE:

    Lets stop fucking around and address the real problem head-on.

    I need to demonstrate a full size 19x19 board working, with
    all the design challenges of zoom/focus/placement/movement
    and such solved.

    First, lets get a full 19x19 end-game board position
    from the Shusaku red-ear game.

    I want to define this in an array, as coding it specifically
    would be incredibly painful :)

    Don't collide against other planes.

    Wow it's incredibly slow (23fps!)

    It appears to be the physics.

    Add star points for 19x19

TODO:

    Measure why the physics is running so slow.

    Optimize this code so that it runs at 60fps.

    Ideas for improving this:

        1. While stones are constrained they only need to collide
           with the primary surface.

        2. While constrained stones can only collide with adjacent
           stones in the logical grid. Can walk logical grid and
           perform collisions instead of using scene grid.















    --------------------------------------------------

    Would be really nice to hold down off the board and
    have the stones "tighten" towards their constraints.

    Currently this can be approximated by randomly
    shaking the board. This is a bit weird! :)

    --------------------------------------------------

    Multitouch should not be able to drag stones together.

    To fix, implement an axis between each stone, or (0,1,0)
    if they have the same center.

    Along this axis check the biconvex support.

    If the supports overlap, push the stones apart along
    this overlap to make sure they move apart.

    --------------------------------------------------







    PAINFUL BUGFIX O_O

    -------------------------------------------------

    Sometimes stones simply don't collide.

    What is causing this? 

    It appears to be scene grid related.

    Can I catch this in the debugger?

    Can I reproduce this in the unit tests?

    *** THIS IS THE ONLY REMAINING OBVIOUS BUG ***

    --------------------------------------------------





    *** GAME POLISH ***

    -------------------------------------------------

    When a stone is colliding with the constraint
    sometimes it gets stuck in a bad orientation
    because of friction with the board.

    Perhaps stones while hard colliding against
    the constraint planes, friction should be 
    disabled, or reduced with the board, as to
    make the stone return to a good orientation
    quickly.

    --------------------------------------------------

    Touch events don't always come in at 60fps

    This is the OS being a fucking piece of shit

    It should be able to do this, but it's probably
    not fair to rely on it. Therefore, I must implement
    interpolation/extrapolation on touch events!

    Stone movement must be smooth and at 60fps
    at all times. Otherwise the illusion of solidity
    is broken!

    -------------------------------------------------

    It is sometimes jarring to see the stone hit an
    invisible wall, it would be nicer if this constraint
    had some softness to it, such that a soft guidance
    would keep the stone within the constraint most
    of the time

    --------------------------------------------------






    *** RENDER POLISH ***

    --------------------------------------------------

    Perhaps if I maintain a high res and low res mesh,
    then I can render the stones with a higher number
    of vertices, while having shadows using less.

    This would look visually better close up!

    --------------------------------------------------

    Some highlighting of the currently selected stone,
    eg. with pulsing of light intensity would also be
    cool.

    ----------------------------------------------------

    When a stone is removed it should be *at minimum*
    an alpha fade-out of both stone and shadow.

    Right now it just pops out of existence.

    This looks terrible.

    -------------------------------------------------

    Black stones should be slightly larger than white
    stones, both in physics calculation and in mesh.

    Would be nice to turn this on.

    -------------------------------------------------------------

    Render shadow to texture and blur out with gaussian

    This is probably the biggest visual improvement I can do 
    at this point.

    -------------------------------------------------------------

    Floor mesh should be rendered with a shader that has a
    spotlight effect. Otherwise the floor is going to look
    infinite, or have an edge, which looks weird

    -------------------------------------------------------------

    Board grid corners need special treatment, a corner texture to
    fix up the gap (otherwise it does not get AA properly...!)

    -----------------------------------------------------------------

    Soften the edges of the go board by baking in some rounding,
    irregularity etc. They look super harsh and sharp right now!

    -----------------------------------------------------------------






    *** COLLISION DETECTION & RESPONSE ***

    --------------------------------------------------

    When a stone is dropped on top of other stones
    but has no empty point, it depresses the other
    stones briefly. This is wrong, but is probably
    best fixed by doing correct collision detection,
    not bounding sphere on the stone vs. some hack.

    -------------------------------------------------

    Get a basic linear collision response going
    between the stones so flicking a stone at another
    stone results in basically plausible collision.

    -----------------------------------------------------------------

    Determine sets of axes required to test biconvex vs. biconvex

    Find axis of least penetration

    Implement proper collision response for two moving objects
    with angular effects. 

    -----------------------------------------------------------------

    I have disable collision between selected stone
    and non-selected stones.

    In reality, I want this back on eventually, as
    the user can launch stones while stones are selected
    which causes penetration.

    Penetration is not acceptable.

    -------------------------------------------------------------

    Now that collision detection is done using a tighter shape,
    dragging stones over other stones should look a lot smoother
    because the ramp up is less severe, eg. less energy being used
    to lift stones above other stones.

    -------------------------------------------------








    -------------------------------------------------------
    
    Would be really nice if I could dynamically adjust
    stone sizes and it would adapt the friction and
    damping settings. Perhaps linear interpolation?

    Would be really nice to let the player adjust stone
    size while the app is running. Would be a very cool
    demo of the different way stones move.

    eg. Do sizes 30, 32, 34, 36, 38, 40...

    Also would be nice to pass over all things that
    affect the stone and make them mass aware, eg.
    impulses should affect heavy stones less

    Perhaps I need to calculate the mass of the go
    stones at various sizes, and feed this in to the
    simulation. It seems the mass needs to be larger
    so that impulses would have less effect.

    ----------------------------------------------------------





    -----------------------------------------------------------------

    Research solver. What do I have to do to implement the solver?

    I strongly suspect that I have to unify the treatement of static
    and non-static contacts in order for the solver to work, because
    the solver must balance the needs of the stones penetrating vs.
    the penetration with the ground and board.

    There must be a way to run the solver without running CD steps
    between each iteration. I simply cannot afford this. But how does
    this work with position correction against penetration?

    (The position offset, is that something that accumulates?)

    Need to talk to Erin to understand the core algorithm.

    Do I need to run CD in between each iteration?

    -----------------------------------------------------------------







    -----------------------------------------------------------------

    Capture go stone diffuse textures

    Implement some way to swipe select between go stone textures

    Perhaps double swipe up/down -- I'd like to let the user
    mix and match go stones with different go boards.

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Capture go stone sounds

    Buy a microphone

    Research how to capture foley

    Need sound of stone hitting board with different variations

    Stone hitting metal for the sides of the frustum

    Stone hitting glass for the front screen

    -----------------------------------------------------------------

    Implement double swipe detection

    Double swipe left/right select between different go board 
    textures, eg. light, dark, red wood etc.

    -----------------------------------------------------------------
