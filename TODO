DONE:

TODO:

    ---------------

    Consolidate all matrix math such that it doesn't use GLKMatrix. 
    This way the matrix math can be portable using vectorial.

    Move the game logic out of ViewController.m and into GameInstance.h

    The idea is that the ViewController.m should just be funnelling
    events to the game instance, leaving the bulk of the game code
    as portable C++

    ----------------

    Next I want to add the concept of stone ids and the
    logical board. Stone id can be a 32bit hash that increases
    with each stone allocated, combined with an index into
    the array.

    This allows subsystems to simply use arrays to store data
    and to compare vs. the stone handle to see if the data has
    been invalidated (removed).

    Once I have stone ids, I can have different managers with
    stone ids so I'm not left with a big fat stone class, eg.
    shadow related stone data can be in one place, matrices
    in another and so on.

    Board shadow on the ground is broken






    -----------------------------------------------------------------

    Turn on locked mode and start tuning this. 

    Why are the stones drifting even though gravity is down?!!!

    Fix shadow z fighting for stones on board/ground etc.

    I want pretty stone wobbling. Not overly damped.

    Get stone id concept.

    Implement stone selection and dragging with multiple stones

    Implement stone id concept

    Remove stones that go offscreen or which are off board for > n secs

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    There should be a concept of stone id

    This way the same stone can have separate data off in different
    arrays, avoiding fat stone data structure (eg. basic components)

    This means that each stone should have an "is valid", or perhaps
    there should be an stone manager with bools per-stone, eg.
    iterate across stones, is this guy valid. OK stone data etc.

    Should move most of the game code out of Objective C into C++

    This will make it more portable, and more maintainable for me.

    -----------------------------------------------------------------

    Dynamic stones flying about, especially stones resting on the 
    floor and in the corners is likely to be a performance problem.

    Any stone which is not currently touching the board should be
    removed. This will tend to keep the number of stones reasonable
    in the case of atomic tesuji.

    Any stones that go off the surface of the board should be culled

    -----------------------------------------------------------------

    In locked mode if a stones logically attach to a grid point
    when placed, and maintain relation to this point via constraint.

    When a stone is moved, it should attach to a grid point

    -----------------------------------------------------------------

    Implement black stones.

    Alternate between placing black and white stones.

    Need different mesh for black stone. It's slightly smaller

    -----------------------------------------------------------------

    Implement zoom in to point of double tap

    Clamp zoom in point to the board surface

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Idea the UI element can be frosted glass resting on the floor

    This would look AWESOME

    -----------------------------------------------------------------

    Add a square UI element that can be pressed to toggle locked mode

    To do this need:

    - ortho projection matrix
    - shader for UI elements (textured, with alpha)

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Implement a way to pick the stone up with two finger swipe
    towards the stone, this is something Evan Cho naturally tried
    to do, therefore it is intuitive and I should support it. 

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Board grid corners need special treatment, a corner texture to
    fix up the gap (otherwise it does not get AA properly...!)

    -----------------------------------------------------------------

    Soften the edges of the go board by baking in some rounding,
    irregularity etc. They look super harsh and sharp right now!

    -----------------------------------------------------------------

    Fix up shadows so they dynamically adjust depending on orientation
    I really want the proper effect on the side when the stone spins
    of it lighting up. Also would be really nice to see the reflections
    on the go board change slightly based on orientation.

    Once this is done adjust the shadows in the zoomed in mode.

    Should be able to have nice divergent shadows when flat,
    while having good shadows on the side.

    Tune on iPad in zoomed out/in

    Tune on iPhone zoomed in

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Instead of zooming in, maybe a second zoomed in view of the board
    can show while you are holding a touch past a certain point!!!

    This would also help fix the problem of not feeling confident
    about where you are placing the stone. 

    This should only show after an extended hold. It would be
    annoying if it would flick on and off.

    Would definitely help fix the FAT FINGERS feeling on ipad,
    if you can see under your finger, this is no longer an issue.

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Capture go stone diffuse textures

    Implement some way to swipe select between go stone textures

    Perhaps double swipe up/down -- I'd like to let the user
    mix and match go stones with different go boards.

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Capture go stone sounds

    Buy a microphone

    Research how to capture foley

    Need sound of stone hitting board with different variations

    Stone hitting metal for the sides of the frustum

    Stone hitting glass for the front screen

    -----------------------------------------------------------------

    Implement double swipe detection

    Double swipe left/right select between different go board 
    textures, eg. light, dark, red wood etc.

    -----------------------------------------------------------------









    -----------------------------------------------------------------

    Seems that hold sometimes does not trigger. Not sure why yet?
    It seems that touch began triggers, but somehow the hold doesn't
    kick in. Maybe the touch began but it doesn't know where?
    Anyway, this is reproduceable so can be fixed later.

    Pops occur in the corners/edges. Need iterative contacts.

    Blow into the microphone moves the stone up (iphone only)

    http://mobileorchard.com/tutorial-detecting-when-a-user-blows-into-the-mic/
    
    -----------------------------------------------------------------

    Prefer spin direction the stone is already spinning around on swipe

    If there is no existing rotation 

    -----------------------------------------------------------------

    The accelerometer not being accurate on side tilt is actually
    not true, it is caused by the frustum planes being not exactly
    flat.

    I'm not sure if I should do anything about this.

    I cannot clamp the value as I want tilting to work on side planes

    I could consider some sort of clamp to nearest plane normal
    concept if within some tolerence, this might be a good idea
    but would make sliding asymmetrical with the floor.

    -----------------------------------------------------------------

    Implement one-two click for placing stone

    First click places the stone but holds it in an alpha state? 
    50% alpha? It's where it will go, but it's not here yet...

    Stone should pulse in alpha actually while being placed...!

    Second click locks in the stone and it goes solid opaque quickly.

    Ideally sound effects for both phase, click - pah. 

    -----------------------------------------------------------------

    Implement iterative solver for simultaneous constraints (eg. corners)

    -----------------------------------------------------------------
















    -----------------------------------------------------------------

    Fix tessellation demo so the two tessellation methods match

    Fix the rotation and lighting back how it was with y<->z

    Fix up the dynamics demo

    Fix up the unit tests

    Move the video recording framework into Platform.h/cpp so
    it isn't cut & paste in every demo program!

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    -----------------------------------------------------------------








    --------------------------------------------------------

    If you through the go stone at the corner (and edge?)
    in some cases it's possible to get the stone to "bounce back"
    as if it hit some invisible wall.

    Is there some error in the push out logic?

    Or some error in the nearest point?

    --------------------------------------------------------
