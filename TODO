DONE:

    First, it would be good to have a MAXIMUM HEIGHT
    to lift to, to avoid the pathological lifting when
    stones are near each other.

    Next, I have disabled any momentum infer while
    stones are constrained, as it seems to be causing
    the random launchings.

TODO:

    Lots of expansion has occured. 

    It is time to fix bugs and contract.

    Lots of systems are roughly coded and hacked in

    Pass over code and clean up.

    --------------------------------------------------

    For example, sometimes stones simply don't collide.

    What is causing this? 

    It appears to be scene grid related.

    --------------------------------------------------

    Add a validate step that cross-checks between
    the logical board view of what is going on,
    and the per-stone instance view of what grid
    point row,column they are attached to.

    This should catch any silly business.

    --------------------------------------------------

    Multitouch should not be able to drag two stones
    together. 

    When selecting multiple stones, all stones should
    standardize to the same select height / plane,
    otherwise it gets confusing.

    After this, all stones should collide with the
    other selected stones and push each other out,
    but only along the xy plane, not vertically.

    This way we can avoid having multi-touch forcing
    stone penetration.

    --------------------------------------------------

    Generally speaking there needs to be a separation
    from physical and visual position.

    While a stone is selected and dragging, the visual
    position should be interpolated/extrapolated from
    the touch positions (which don't always come in
    every frame!)

    Also, the Z position of the stone while being dragged
    must snap physically above other stones, as to not
    push them around, but visually we want this to be 
    smooth.

    --------------------------------------------------

    Some highlighting of the currently selected stone,
    eg. with pulsing of light intensity would also be
    cool.

    --------------------------------------------------

    Would be really nice to hold down off the board and
    have the stones "tighten" towards their constraints.

    -------------------------------------------------

    When a stone is colliding with the constraint
    sometimes it gets stuck in a bad orientation
    because of friction with the board.

    Perhaps stones while hard colliding against
    the constraint planes, friction should be 
    disabled, or reduced with the board, as to
    make the stone return to a good orientation
    quickly.

    -------------------------------------------------

    It is sometimes jarring to see the stone hit an
    invisible wall, it would be nicer if this constraint
    had some softness to it, such that a soft guidance
    would keep the stone within the constraint most
    of the time

    -------------------------------------------------

    Get a basic linear collision response going
    between the stones so flicking a stone at another
    stone results in basically plausible collision.

    -------------------------------------------------

    Toggle lock/unlock by double tapping or holding

    Perhaps the logical position of the stones can be
    remembered, so after returned to locked mode stones
    can lerp to their locked positions.

    This means that any physical changes in unlocked
    mode do not affect the logical position of the
    stones (makes sense)

    -------------------------------------------------






    -------------------------------------------------------
    
    Would be really nice if I could dynamically adjust
    stone sizes and it would adapt the friction and
    damping settings. Perhaps linear interpolation?

    Would be really nice to let the player adjust stone
    size while the app is running. Would be a very cool
    demo of the different way stones move.

    eg. Do sizes 30, 32, 34, 36, 38, 40...

    Also would be nice to pass over all things that
    affect the stone and make them mass aware, eg.
    impulses should affect heavy stones less

    Perhaps I need to calculate the mass of the go
    stones at various sizes, and feed this in to the
    simulation. It seems the mass needs to be larger
    so that impulses would have less effect.

    -------------------------------------------------

    Black stones should be slightly larger than white
    stones, both in physics calculation and in mesh.

    Would be nice to turn this on.

    -------------------------------------------------

    




    -----------------------------------------------------------------

    Determine sets of axes required to test biconvex vs. biconvex

    Find axis of least penetration

    Implement proper collision response for two moving objects
    with angular effects. 

    Handle the case where the mass is scaled
    to infinite as well, eg. stone that is currently selected.

    -----------------------------------------------------------------






    -----------------------------------------------------------------

    Research solver. What do I have to do to implement the solver?

    I strongly suspect that I have to unify the treatement of static
    and non-static contacts in order for the solver to work, because
    the solver must balance the needs of the stones penetrating vs.
    the penetration with the ground and board.

    There must be a way to run the solver without running CD steps
    between each iteration. I simply cannot afford this. But how does
    this work with position correction against penetration?

    (The position offset, is that something that accumulates?)

    Need to talk to Erin to understand the core algorithm.

    Do I need to run CD in between each iteration?

    -----------------------------------------------------------------







    -----------------------------------------------------------------

    When a stone is moved, it should logically attach to a grid point

    Add a constraint to the grid point

    Add some UI element to toggle locked mode on/off

    When in locked mode, any stone that is not logically occupying
    a position on the logical board will be deleted in 5 secs.

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Implement zoom in to point of double tap

    Clamp zoom in point to the board surface

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Idea the UI element can be frosted glass resting on the floor

    This would look AWESOME

    -----------------------------------------------------------------

    Add a square UI element that can be pressed to toggle locked mode

    To do this need:

    - ortho projection matrix
    - shader for UI elements (textured, with alpha)

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Implement a way to pick the stone up with two finger swipe
    towards the stone, this is something Evan Cho naturally tried
    to do, therefore it is intuitive and I should support it. 

    -----------------------------------------------------------------




    -----------------------------------------------------------------

    Board grid corners need special treatment, a corner texture to
    fix up the gap (otherwise it does not get AA properly...!)

    -----------------------------------------------------------------

    Soften the edges of the go board by baking in some rounding,
    irregularity etc. They look super harsh and sharp right now!

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Instead of zooming in, maybe a second zoomed in view of the board
    can show while you are holding a touch past a certain point!!!

    This would also help fix the problem of not feeling confident
    about where you are placing the stone. 

    This should only show after an extended hold. It would be
    annoying if it would flick on and off.

    Would definitely help fix the FAT FINGERS feeling on ipad,
    if you can see under your finger, this is no longer an issue.

    -----------------------------------------------------------------








    -----------------------------------------------------------------

    Capture go stone diffuse textures

    Implement some way to swipe select between go stone textures

    Perhaps double swipe up/down -- I'd like to let the user
    mix and match go stones with different go boards.

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Capture go stone sounds

    Buy a microphone

    Research how to capture foley

    Need sound of stone hitting board with different variations

    Stone hitting metal for the sides of the frustum

    Stone hitting glass for the front screen

    -----------------------------------------------------------------

    Implement double swipe detection

    Double swipe left/right select between different go board 
    textures, eg. light, dark, red wood etc.

    -----------------------------------------------------------------









    -----------------------------------------------------------------

    Pops occur in the corners/edges. Need iterative contacts.

    Blow into the microphone moves the stone up (iphone only)

    http://mobileorchard.com/tutorial-detecting-when-a-user-blows-into-the-mic/
    
    -----------------------------------------------------------------

    Prefer spin direction the stone is already spinning around on swipe

    If there is no existing rotation 

    -----------------------------------------------------------------

    The accelerometer not being accurate on side tilt is actually
    not true, it is caused by the frustum planes being not exactly
    flat.

    I'm not sure if I should do anything about this.

    I cannot clamp the value as I want tilting to work on side planes

    I could consider some sort of clamp to nearest plane normal
    concept if within some tolerence, this might be a good idea
    but would make sliding asymmetrical with the floor.

    -----------------------------------------------------------------

    Implement iterative solver for simultaneous constraints (eg. corners)

    -----------------------------------------------------------------
















    -----------------------------------------------------------------

    Move the video recording framework into Platform.h/cpp so
    it isn't cut & paste in every demo program!

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    --------------------------------------------------------
