DONE:

    Convert to right handed coordinates (WIP fixing up)

    Fixed biconvex support

    Fixed weirdness with camera zoom levels

    Fixed stone strafe sliding directions

TODO:

    Contact point is wrong with biconvex vs. primary surface

    Highest level zoom cam is incorrect -- like a sign is flipped (eg. front to behind object)

    Re-enable energy kinetic energy post-collision test. 

    Does it pass? If not, why not?

    -----------------------------------------------------------------

    Reduce frequency of substeps -- I think we only need to 
    integrate the orientation with these substeps, and don't
    need to run collision detection and response at this rate!

    (Tunnelling may become more of a problem...)

    -----------------------------------------------------------------

    Tessellation demo appears to be inside out?

    Why are cracks showing in tessellation demo?

    -----------------------------------------------------------------

    Find a way to unify code between xcode and sublime codebases

    Implement collision detection with walls (eg. plane)

    Detect stone at rest (to stop drift on slope...)

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    -----------------------------------------------------------------








    --------------------------------------------------------

    Need some way to adjust brightness because they grey
    board is likely to be difficult to see without turning
    the lights off on a projector

    --------------------------------------------------------

    For the proper demo of the board provide best camera
    angles (as minimal as possible) that support common
    views for playing.

    Basically, a top down view, a side-on view, and a zoom
    view which supports scrolling at an ideal distance back.

    This should be separate from the collision demo.

    --------------------------------------------------------

    When sliding the stone diagonal should not be faster
    than left/right/up/down
    
    --------------------------------------------------------

    Really need to add a blurry shadow to the go stone on
    the board. This will complete the visual look!

    --------------------------------------------------------

    If you through the go stone at the corner (and edge?)
    in some cases it's possible to get the stone to "bounce back"
    as if it hit some invisible wall.

    Is there some error in the push out logic?

    Or some error in the nearest point?

    --------------------------------------------------------

    Finish the article series

    Back port to talk slides

    --------------------------------------------------------

    Get polarized lense filters to remove stone highlight

    Rent a better camera

    Capture all go stone textures top and bottom

    Capture board texture kaya including sides

    Create Texture.h to manage sets of textures easily

    Switch to DDS files with offline mipmap generation

    --------------------------------------------------------
    