DONE:

TODO:

    -----------------------------------------------------------------

    Cancel swipe/hold if multiple touches occur. 

    Swipe is one finger only!

    -----------------------------------------------------------------

    Implement one-two click for placing stone

    First click places the stone but holds it in an alpha state? 
    50% alpha? It's where it will go, but it's not here yet...

    Stone should pulse in alpha actually while being placed...!

    Second click locks in the stone and it goes solid opaque quickly.

    Ideally sound effects for both phase, click - pah. 

    -----------------------------------------------------------------

    !!!! IOS PROTOTYPE COMPLETE !!!!

    -----------------------------------------------------------------





    -----------------------------------------------------------------

    Polish:

    Seems that hold sometimes does not trigger. Not sure why yet?
    It seems that touch began triggers, but somehow the hold doesn't
    kick in. Maybe the touch began but it doesn't know where?
    Anyway, this is reproduceable so can be fixed later.

    Would be nice to be able to transition from hold -> swipe mode
    without needing to repress the touch. 

    eg. if you are still 
    for x seconds then you are holding, if you are moving then
    you are not holding, if you move fast a threshold you swiped.

    There is some weird perspective effect on the drag

    I want the center of the stone to remain basically the same
    offset, in screen-space, from the center of the touch.

    I think this means I need to do the offsetting in screen space,
    and then project this offset to the xy plane to find the center
    point for the biconvex (?!)

    Pops occur in the corners/edges. Need iterative contacts.

    Pops sometimes occur when clicking stone before drag.
    Something wrong with the offset math?

    Stone drag appears wrong. Strange perspective effect.
    Need to convert offset to work in screen space?

    -----------------------------------------------------------------

    The accelerometer not being accurate on side tilt is actually
    not true, it is caused by the frustum planes being not exactly
    flat.

    I'm not sure if I should do anything about this.

    I cannot clamp the value as I want tilting to work on side planes

    I could consider some sort of clamp to nearest plane normal
    concept if within some tolerence, this might be a good idea
    but would make sliding asymmetrical with the floor.

    -----------------------------------------------------------------

    Implement board render texture

    Implement board render with grid lines

    Implement better lighting

    Implement simple shadow (projection)

    Implement iterative solver for simultaneous constraints (eg. corners)

    -----------------------------------------------------------------
















    -----------------------------------------------------------------

    Fix tessellation demo so the two tessellation methods match

    Fix the rotation and lighting back how it was with y<->z

    Fix up the dynamics demo

    Fix up the unit tests

    Move the video recording framework into Platform.h/cpp so
    it isn't cut & paste in every demo program!

    -----------------------------------------------------------------

    Fix sphere vs. edge to include axes corresponding to
    each sphere touching the edge -- right now, not exact
    unless sphere hits 45 degrees.

    Fix bounce back off inside edge collision case (repro first)

    -----------------------------------------------------------------








    --------------------------------------------------------

    Need some way to adjust brightness because they grey
    board is likely to be difficult to see without turning
    the lights off on a projector

    --------------------------------------------------------

    For the proper demo of the board provide best camera
    angles (as minimal as possible) that support common
    views for playing.

    Basically, a top down view, a side-on view, and a zoom
    view which supports scrolling at an ideal distance back.

    This should be separate from the collision demo.

    --------------------------------------------------------

    When sliding the stone diagonal should not be faster
    than left/right/up/down
    
    --------------------------------------------------------

    Really need to add a blurry shadow to the go stone on
    the board. This will complete the visual look!

    --------------------------------------------------------

    If you through the go stone at the corner (and edge?)
    in some cases it's possible to get the stone to "bounce back"
    as if it hit some invisible wall.

    Is there some error in the push out logic?

    Or some error in the nearest point?

    --------------------------------------------------------

    Finish the article series

    Back port to talk slides

    --------------------------------------------------------

    Get polarized lense filters to remove stone highlight

    Rent a better camera

    Capture all go stone textures top and bottom

    Capture board texture kaya including sides

    Create Texture.h to manage sets of textures easily

    Switch to DDS files with offline mipmap generation

    --------------------------------------------------------
    