{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
		{
			"file": "TODO",
			"settings":
			{
				"buffer_size": 4923,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Biconvex.h",
			"settings":
			{
				"buffer_size": 13248,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 107.0,
		"selected_items":
		[
			[
				"TODO",
				"Package Control: Discover Packages"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 61.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gaffer/virtualgo/premake4.lua",
		"/Users/gaffer/virtualgo/VirtualGo.cpp",
		"/Users/gaffer/virtualgo/Collision.cpp",
		"/Users/gaffer/virtualgo/TODO",
		"/Users/gaffer/virtualgo/Render.h",
		"/Users/gaffer/virtualgo/Angular.cpp",
		"/Users/gaffer/virtualgo/Picking.cpp",
		"/Users/gaffer/virtualgo/Tessellation.cpp",
		"/Users/gaffer/virtualgo/DIAGRAMS",
		"/Users/gaffer/virtualgo/CHANGES",
		"/Users/gaffer/virtualgo/Support.cpp",
		"/Users/gaffer/virtualgo/Biconvex.h",
		"/Users/gaffer/virtualgo/ARTICLES",
		"/Users/gaffer/virtualgo/Tesselation",
		"/Users/gaffer/virtualgo/Tesselation.cpp",
		"/Users/gaffer/virtualgo/TALK",
		"/Users/gaffer/virtualgo/Common.h",
		"/Users/gaffer/virtualgo/Mesh.h",
		"/Users/gaffer/virtualgo/vectorial/simd4f_common.h",
		"/Users/gaffer/virtualgo/vectorial/vec3f.h",
		"/Users/gaffer/virtualgo/vectorial/simd4f.h",
		"/Users/gaffer/virtualgo/Platform.h",
		"/Users/gaffer/virtualgo/Platform.cpp",
		"/Users/gaffer/virtualgo/vectorial/simd4f_sse.h",
		"/Users/gaffer/virtualgo/Config.h",
		"/Users/gaffer/virtualgo/Stone.h",
		"/Users/gaffer/virtualgo/UnitTest++/CurrentTest.cpp",
		"/Users/gaffer/virtualgo/Intersection.h",
		"/Users/gaffer/virtualgo/Board.h",
		"/Users/gaffer/virtualgo/Collision.h",
		"/Users/gaffer/virtualgo/UnitTest.cpp",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Core/MeshFactory.h",
		"/Users/gaffer/virtualgo/obj/Debug/VirtualGo/Platform.d",
		"/Users/gaffer/virtualgo/RigidBody.h",
		"/Users/gaffer/Board.h",
		"/Users/gaffer/virtualgo/vectorial/mat4f.h",
		"/Users/gaffer/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/VirtualGo/VirtualGo.cpp",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Mathematics/Biconvex.h",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Physics/Physics.cpp",
		"/Volumes/KINGSTON/VirtualGo.cpp",
		"/Users/gaffer/Desktop/issues",
		"/Users/gaffer/virtualgo/UnitTest.make",
		"/Users/gaffer/Library/LaunchAgents/LaunchQuicksilverAtStartup.plist",
		"/Users/gaffer/virtualgo/output.txt",
		"/Users/gaffer/virtualgo/vectorial/simd4f_neon.h",
		"/Users/gaffer/virtualgo/UnitTest++/Posix/SignalTranslator.cpp",
		"/Users/gaffer/virtualgo/vectorial/simd4x4f.h",
		"/Users/gaffer/bio.txt",
		"/Users/gaffer/opengl/OpenGL.cpp",
		"/Users/gaffer/virtualgo/vectorial/vec4f.h",
		"/Users/gaffer/virtualgo/build/obj/Debug/CurrentTest.d",
		"/Users/gaffer/virtualgo/build/obj/Debug/TestRunner.d",
		"/Users/gaffer/virtualgo/VirtualGo.sublime-project",
		"/Users/gaffer/virtualgo/build/obj/Debug/TimeConstraint.d",
		"/Users/gaffer/Desktop/hosting meeting with OTG",
		"/Users/gaffer/Desktop/hosting meeting with GH",
		"/Users/gaffer/virtualgo/vectorial/simd4f_scalar.h",
		"/Users/gaffer/virtualgo/View.h",
		"/Users/gaffer/git/cubes/client/Render.cpp",
		"/Users/gaffer/git/network/premake4.lua",
		"/Users/gaffer/Desktop/Intersection of Ellipsoids.pdf",
		"/Users/gaffer/git/cubes/PreCompiled.h",
		"/Users/gaffer/virtualgo/vectorial/config.h",
		"/Users/gaffer/git/cubes/shared/Engine.cpp",
		"/Users/gaffer/Downloads/scoopr-vectorial-85caa38/README",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Core/Stone.h",
		"/Users/gaffer/Desktop/Biconvex.h",
		"/Users/gaffer/git/network/ruby/shortcuts.rb",
		"/Users/gaffer/git/network/src/netGameModeData.cpp",
		"/Users/gaffer/git/network/include/netGameModeData.h",
		"/Users/gaffer/git/network/test/TestGameModeData.cpp",
		"/Users/gaffer/git/network/ruby/gameModes.rb",
		"/Users/gaffer/git/network/TODO",
		"/Users/gaffer/git/network/CHANGES",
		"/Users/gaffer/git/network/data/wads/network/GameModes.json",
		"/Users/gaffer/git/network/shadow/netMake.txt",
		"/Users/gaffer/git/network/shadow/m4/GameModes.net.29486",
		"/Users/gaffer/git/network/include/netShortcutData.h",
		"/Users/gaffer/git/network/test/TestShortcutData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Events.net",
		"/Users/gaffer/git/network/data/GameModes.net",
		"/Users/gaffer/git/network/data/Shortcuts.net",
		"/Users/gaffer/git/network/ALPHA",
		"/Users/gaffer/git/network/data/wads/network/Shortcuts.json",
		"/Users/gaffer/git/network/build/Generated.make",
		"/Users/gaffer/git/network/ruby/subWads.rb",
		"/Users/gaffer/git/network/include/netSubWadData.h",
		"/Users/gaffer/git/network/src/netSubWadData.cpp",
		"/Users/gaffer/git/network/test/TestSubWadData.h",
		"/Users/gaffer/git/network/test/TestSubWadData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Header.net",
		"/Users/gaffer/git/network/data/SubWads.net",
		"/Users/gaffer/git/network/data/wads/network/SubWads.json",
		"/Users/gaffer/git/network/ruby/netQuery.rb",
		"/Users/gaffer/git/network/TASKS",
		"/Users/gaffer/git/network/src/netTransportLAN.cpp",
		"/Users/gaffer/Desktop/community plan: game to web",
		"/Users/gaffer/git/network/shadow/Shortcuts.txt",
		"/Users/gaffer/git/network/ruby/common.rb",
		"/Users/gaffer/git/network/ruby/levels.rb",
		"/Users/gaffer/git/network/incoming/mpScriptingManager.cpp",
		"/Users/gaffer/git/network/incoming/mpScriptingManager.h",
		"/Users/gaffer/git/network/incoming/mpAuthorityManager.cpp",
		"/Users/gaffer/git/network/incoming/mpDebug.cpp",
		"/Users/gaffer/git/network/incoming/mpInventoryManager.cpp",
		"/Users/gaffer/TASKS",
		"/Users/gaffer/git/network/incoming/mpState.cpp",
		"/Users/gaffer/git/network/incoming/mpVariableManager.cpp",
		"/Users/gaffer/git/network/src/netLevelData.cpp",
		"/Users/gaffer/git/network/incoming/mpTypes.h",
		"/Users/gaffer/git/network/incoming/mpStateManager.cpp",
		"/Users/gaffer/git/network/test/TestProtocol.cpp",
		"/Users/gaffer/git/network/incoming/mpCreatureManager.cpp",
		"/Users/gaffer/git/network/include/netUtil.h",
		"/Users/gaffer/git/network/include/netDataLanguage.h",
		"/Users/gaffer/git/network/incoming/Multiplayer.cpp",
		"/Users/gaffer/git/network/ruby/whoops.txt",
		"/Users/gaffer/git/network/incoming/Network.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Constants.net",
		"/Users/gaffer/git/network/include/netTime.h",
		"/Users/gaffer/git/network/incoming/mpInterface.cpp",
		"/Users/gaffer/git/network/incoming/mpPlayerManager.cpp",
		"/Users/gaffer/git/network/incoming/mpShortcutsManager.cpp",
		"/Users/gaffer/git/network/incoming/mpDefinitions.h",
		"/Users/gaffer/git/network/test/Data.cpp",
		"/Users/gaffer/git/network/test/PreBuild.cpp",
		"/Users/gaffer/git/network/test/UnitTest.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"float t",
			"dt",
			"space",
			"hack:",
			"0.5",
			"mode",
			"LinearCollisionResponse",
			"RigidBodyTransform",
			"colliding",
			"dt",
			"step_dt",
			"GL_LIGHTING",
			"FallingStone",
			"prevCollision",
			"StoneAndBoard",
			"glLineWidth",
			"prevSpace",
			"tesselation",
			"Tesselation",
			"RenderBic",
			"247",
			"printf",
			"list",
			"listvectorvec",
			"list",
			"2 )",
			"Quit",
			"GenerateBiconvex",
			"t = ",
			"dt",
			"DisplayWidth",
			"CloseDisplay",
			"bevel",
			"LIGHTING",
			"Test",
			"NearestPointOnStone",
			"IntersectRayStone",
			"Intersect_RayStone",
			"BoardEdges",
			"BOARD_EDGE",
			"ClosestFeaturesStoneBoard",
			"Generate",
			"GenerateBiconvex",
			"HACK",
			"Generate",
			"GenerateBiconvexMesh",
			"Generate",
			"SMOOTH",
			"GenerateBiconvex",
			"RenderBiconvex",
			"axisRotation",
			"Generate",
			"rotation",
			"Generate",
			"buildList",
			"cleanup",
			"scaleAndTranslateSurface",
			"GenerateBiconvexMesh",
			"RenderBiconvex",
			"SMOOTH",
			"RenderBiconvex",
			"OpenDisplay",
			"Normal",
			"RenderBiconvex",
			"ClearScreen",
			"RenderBiconvex",
			"HACK",
			"TODO",
			"Quaternion",
			"flipX",
			"hack",
			"todo",
			"hack",
			"steps = ",
			"ke_before",
			"GetVelocityAtPoint",
			"inverseInertiaTensor",
			"inertiaTensor",
			"BiconvexInertiaTensor",
			"inertiaTensor",
			"KineticEnergy",
			"Kinetic",
			"hack",
			"printf",
			"x axis",
			"RandomStone",
			"IntersectStoneBoard",
			"epsilon",
			"printf",
			"i = ",
			"printf",
			"mass = ",
			"Calculate",
			"mass = ",
			"todo",
			"0.1f *",
			"0.1 *",
			"todo",
			"* 0.1",
			"angularVelocity",
			"todo",
			"p = ",
			"CalculateBiconvex",
			"RandomStone",
			"Biconvex",
			"BiconvexInr",
			"Biconvex biconvex",
			"RandomStone",
			"Biconvex bicon",
			"Ellip",
			"zero",
			"RandomStone",
			"prevEnter",
			"steps",
			"RandomStone",
			"float mass",
			"RigidBody()",
			"Ellipsoid",
			"Biconvex",
			"todo",
			"flipX",
			"scaled_dt",
			"angularVelocity",
			"scaled_dt",
			"RenderBiconvex_Lines",
			"prevSpace",
			"scaled",
			"scaleddt"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "TODO",
					"settings":
					{
						"buffer_size": 4923,
						"regions":
						{
						},
						"selection":
						[
							[
								23,
								23
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Biconvex.h",
					"settings":
					{
						"buffer_size": 13248,
						"regions":
						{
						},
						"selection":
						[
							[
								552,
								552
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 188.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"biconvex.h",
				"Biconvex.h"
			],
			[
				"todo",
				"TODO"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"virtualgo.cpp",
				"VirtualGo.cpp"
			],
			[
				"collision.cpp",
				"Collision.cpp"
			],
			[
				"render.h",
				"Render.h"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"diagrams",
				"DIAGRAMS"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"tesselation.cpp",
				"Tessellation.cpp"
			],
			[
				"picking.cpp",
				"Picking.cpp"
			],
			[
				"pre",
				"premake4.lua"
			],
			[
				"tess",
				"Tessellation.cpp"
			],
			[
				"dia",
				"DIAGRAMS"
			],
			[
				"di",
				"DIAGRAMS"
			],
			[
				"art",
				"ARTICLES"
			],
			[
				"articles",
				"ARTICLES"
			],
			[
				"talk",
				"TALK"
			],
			[
				"common.h",
				"Common.h"
			],
			[
				"comomn.h",
				"vectorial/simd4f_common.h"
			],
			[
				"mesh.h",
				"Mesh.h"
			],
			[
				"platform.cpp",
				"Platform.cpp"
			],
			[
				"platform.h",
				"Platform.h"
			],
			[
				"simd4f_sse.h",
				"vectorial/simd4f_sse.h"
			],
			[
				"simd4f.h",
				"vectorial/simd4f.h"
			],
			[
				"vec3f",
				"vectorial/vec3f.h"
			],
			[
				"stone.h",
				"Stone.h"
			],
			[
				"config.h",
				"Config.h"
			],
			[
				"comm",
				"Common.h"
			],
			[
				"prem",
				"premake4.lua"
			],
			[
				"intersection.h",
				"Intersection.h"
			],
			[
				"unittest.cpp",
				"UnitTest.cpp"
			],
			[
				"collision.h",
				"Collision.h"
			],
			[
				"intersect.",
				"Intersection.h"
			],
			[
				"vec3f.h",
				"vectorial/vec3f.h"
			],
			[
				"mat4f.h",
				"vectorial/mat4f.h"
			],
			[
				"",
				"CHANGES"
			],
			[
				"vitualgo.cpp",
				"VirtualGo.cpp"
			],
			[
				"output.txt",
				"output.txt"
			],
			[
				"output.tx",
				"output.txt"
			],
			[
				"out",
				"output.txt"
			],
			[
				"simd",
				"vectorial/simd4x4f.h"
			],
			[
				"vec4f.h",
				"vectorial/vec4f.h"
			],
			[
				"con",
				"Config.h"
			],
			[
				"plat",
				"Platform.h"
			],
			[
				"done",
				"build/obj/Debug/TestRunner.d"
			],
			[
				"sim",
				"vectorial/simd4x4f.h"
			],
			[
				"mat4f",
				"vectorial/mat4f.h"
			],
			[
				"mat",
				"vectorial/mat4f.h"
			],
			[
				"simd4x4",
				"vectorial/simd4x4f.h"
			],
			[
				"view.h",
				"View.h"
			],
			[
				"pm",
				"premake4.lua"
			],
			[
				"lua",
				"premake4.lua"
			],
			[
				"gamemodes.json",
				"data/wads/network/GameModes.json"
			],
			[
				"testgamemodedata.cpp",
				"test/TestGameModeData.cpp"
			],
			[
				"netgamemodedata.h",
				"include/netGameModeData.h"
			],
			[
				"netgamemodedata.cpp",
				"src/netGameModeData.cpp"
			],
			[
				"netmake.txt",
				"shadow/netMake.txt"
			],
			[
				"gamemodes.rb",
				"ruby/gameModes.rb"
			],
			[
				"events.net",
				"ruby/ndl/Events.net"
			],
			[
				"gamemodes.net",
				"data/GameModes.net"
			],
			[
				"alpha",
				"ALPHA"
			],
			[
				"shortcuts.net",
				"data/Shortcuts.net"
			],
			[
				"testshortcutdata.cpp",
				"test/TestShortcutData.cpp"
			],
			[
				"netshortcutdata.h",
				"include/netShortcutData.h"
			],
			[
				"shortcuts.json",
				"data/wads/network/Shortcuts.json"
			],
			[
				"generate",
				"build/Generated.make"
			],
			[
				"shortcuts.rb",
				"ruby/shortcuts.rb"
			],
			[
				"subwads.rb",
				"ruby/subWads.rb"
			],
			[
				"subwads.net",
				"data/SubWads.net"
			],
			[
				"header.net",
				"ruby/ndl/Header.net"
			],
			[
				"subwads.json",
				"data/wads/network/SubWads.json"
			],
			[
				"testsubwaddata.cpp",
				"test/TestSubWadData.cpp"
			],
			[
				"netsubwaddata.cpp",
				"src/netSubWadData.cpp"
			],
			[
				"netsubwaddata.h",
				"include/netSubWadData.h"
			],
			[
				"testsubwaddata.h",
				"test/TestSubWadData.h"
			],
			[
				"netquery.rb",
				"ruby/netQuery.rb"
			],
			[
				"tasks",
				"TASKS"
			],
			[
				"nettransportlan.cpp",
				"src/netTransportLAN.cpp"
			],
			[
				"shortcuts.txt",
				"shadow/Shortcuts.txt"
			],
			[
				"common.rb",
				"ruby/common.rb"
			],
			[
				"levels.rb",
				"ruby/levels.rb"
			],
			[
				"mpscriptingmanager.h",
				"incoming/mpScriptingManager.h"
			],
			[
				"tsks",
				"TASKS"
			],
			[
				"contants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"constants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"prebuildcpp",
				"test/PreBuild.cpp"
			],
			[
				"data.cpp",
				"test/Data.cpp"
			],
			[
				"prebuild.cpp",
				"test/PreBuild.cpp"
			],
			[
				"filewriter.rb",
				"ruby/fileWriter.rb"
			],
			[
				"netshortcutdata.cpp",
				"src/netShortcutData.cpp"
			],
			[
				"netleveldata.cpp",
				"src/netLevelData.cpp"
			],
			[
				"soaktest.cpp",
				"test/SoakTest.cpp"
			],
			[
				"testdata.h",
				"test/TestData.h"
			],
			[
				"types",
				"include/netTypes.h"
			],
			[
				"testevents.h",
				"test/TestEvents.h"
			],
			[
				"testshortcuts.cpp",
				"test/TestShortcuts.cpp"
			],
			[
				"netmake.rb",
				"ruby/netMake.rb"
			],
			[
				"short",
				"ruby/shortcuts.rb"
			],
			[
				"testgamemode",
				"test/TestGameModeData.h"
			],
			[
				"testsubwads.cpp",
				"test/TestSubWads.cpp"
			],
			[
				"testlevel",
				"test/TestLevelStateMachine.cpp"
			],
			[
				"testlevelstatemachine.h",
				"test/TestLevelStateMachine.h"
			],
			[
				"testgamefixture.cpp",
				"test/TestGameFixture.cpp"
			],
			[
				"testgamefixture.h",
				"test/TestGameFixture.h"
			],
			[
				"tood",
				"build/obj/x64/Debug/UnitTest++/MemoryOutStream.d"
			],
			[
				"testtokenmanager.cpp",
				"test/TestTokenManager.cpp"
			],
			[
				"testleveldata.h",
				"test/TestLevelData.h"
			],
			[
				"testleveldata.cpp",
				"test/TestLevelData.cpp"
			],
			[
				"netlevelstatemachine.h",
				"include/netLevelStateMachine.h"
			],
			[
				"netlevelstatemachine.cpp",
				"src/netLevelStateMachine.cpp"
			],
			[
				"netleveldata.h",
				"include/netLevelData.h"
			],
			[
				"testgameod",
				"test/TestGameModeData.h"
			],
			[
				"netsubwad",
				"src/netSubWadData.cpp"
			],
			[
				"subwads",
				"shadow/SubWads.txt"
			],
			[
				"gamemode.rb",
				"ruby/gameModes.rb"
			],
			[
				"testgamem",
				"test/TestGameModeData.h"
			],
			[
				"netmke.rb",
				"ruby/netMake.rb"
			],
			[
				"testgamemodedata.h",
				"test/TestGameModeData.h"
			],
			[
				"testgamemode.cpp",
				"test/TestGameModeData.cpp"
			],
			[
				"netprotocol.cpp",
				"src/netProtocol.cpp"
			],
			[
				"constants.rb",
				"ruby/constants.rb"
			],
			[
				"testndl.cpp",
				"test/TestNDL.cpp"
			],
			[
				"testlevelstatemachine.cpp",
				"test/TestLevelStateMachine.cpp"
			],
			[
				"testgame",
				"test/TestGameModeData.h"
			],
			[
				"netconfig.h",
				"include/netConfig.h"
			],
			[
				"gamemodes",
				"shadow/m4/GameModes.net.14152"
			],
			[
				"enums.net",
				"ruby/ndl/Enums.net"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true
}
