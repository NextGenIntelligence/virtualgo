{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"TODO",
				"Package Control: Discover Packages"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 61.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gaffer/virtualgo/TODO",
		"/Users/gaffer/virtualgo/CHANGES",
		"/Users/gaffer/virtualgo/xcode/Virtual Go.xcodeproj/project.pbxproj",
		"/Users/gaffer/virtualgo/Intersection.h",
		"/Users/gaffer/virtualgo/xcode/Virtual Go/ViewController.m",
		"/Users/gaffer/Desktop/tolga.txt",
		"/Users/gaffer/Desktop/blair.txt",
		"/Users/gaffer/virtualgo/Stone.h",
		"/Users/gaffer/virtualgo/Collision.cpp",
		"/Users/gaffer/virtualgo/Render.h",
		"/Users/gaffer/virtualgo/Common.h",
		"/Users/gaffer/virtualgo/xcode/Virtual Go/ViewController.h",
		"/Users/gaffer/virtualgo/CollisionDetection.h",
		"/Users/gaffer/virtualgo/RigidBody.h",
		"/Users/gaffer/virtualgo/Mesh.h",
		"/Users/gaffer/Downloads/TestFlightSDK1.2.4/README.md",
		"/Users/gaffer/virtualgo/vectorial/mat4f.h",
		"/Users/gaffer/virtualgo/Picking.cpp",
		"/Users/gaffer/virtualgo/Platform.h",
		"/Users/gaffer/virtualgo/CollisionResponse.h",
		"/Users/gaffer/virtualgo/vectorial/simd4x4f.h",
		"/Users/gaffer/Dropbox/talks/gdc2009/sandbox/source/Render.h",
		"/Users/gaffer/Dropbox/talks/gdc2009/sandbox/source/Mathematics.h",
		"/Users/gaffer/virtualgo/vectorial/vec4f.h",
		"/Users/gaffer/virtualgo/Biconvex.h",
		"/Users/gaffer/Dropbox/gdc/2009/sandbox/source/Render.h",
		"/Users/gaffer/Dropbox/gdc/2009/sandbox/source/Common.h",
		"/Users/gaffer/Dropbox/gdc/2009/sandbox/source/Mathematics.h",
		"/Users/gaffer/virtualgo/VirtualGo.cpp",
		"/Users/gaffer/virtualgo/InertiaTensor.h",
		"/Users/gaffer/virtualgo/premake4.lua",
		"/Users/gaffer/virtualgo/Tessellation.cpp",
		"/Users/gaffer/virtualgo/Support.cpp",
		"/Users/gaffer/virtualgo/VirtualGo.sublime-project",
		"/Users/gaffer/virtualgo/Board.h",
		"/Users/gaffer/virtualgo/Dynamics.cpp",
		"/Users/gaffer/Desktop/RollingFriction.c",
		"/Users/gaffer/Desktop/CoulombFriction.c",
		"/Users/gaffer/Desktop/gdc/CalculateBiconvex.c",
		"/Users/gaffer/virtualgo/RigidBody.c",
		"/Users/gaffer/Desktop/VelocityAtPoint.c",
		"/Users/gaffer/Desktop/InertiaTensor.c",
		"/Users/gaffer/virtualgo/stb_image.c",
		"/Users/gaffer/virtualgo/stb_image.h",
		"/Users/gaffer/virtualgo/Config.h",
		"/Users/gaffer/virtualgo/Platform.cpp",
		"/Users/gaffer/virtualgo/UnitTest.cpp",
		"/Users/gaffer/virtualgo/TALK",
		"/Users/gaffer/virtualgo/obj/Debug/Collision/Platform.d",
		"/Users/gaffer/virtualgo/Collision.h",
		"/Users/gaffer/Documents/bugs",
		"/Users/gaffer/virtualgo/vectorial/simd4f.h",
		"/Users/gaffer/Desktop/backup2",
		"/Users/gaffer/virtualgo/Angular.cpp",
		"/Users/gaffer/virtualgo/DIAGRAMS",
		"/Users/gaffer/virtualgo/ARTICLES",
		"/Users/gaffer/virtualgo/Tesselation",
		"/Users/gaffer/virtualgo/Tesselation.cpp",
		"/Users/gaffer/virtualgo/vectorial/simd4f_common.h",
		"/Users/gaffer/virtualgo/vectorial/vec3f.h",
		"/Users/gaffer/virtualgo/vectorial/simd4f_sse.h",
		"/Users/gaffer/virtualgo/UnitTest++/CurrentTest.cpp",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Core/MeshFactory.h",
		"/Users/gaffer/virtualgo/obj/Debug/VirtualGo/Platform.d",
		"/Users/gaffer/Board.h",
		"/Users/gaffer/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/VirtualGo/VirtualGo.cpp",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Mathematics/Biconvex.h",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Physics/Physics.cpp",
		"/Volumes/KINGSTON/VirtualGo.cpp",
		"/Users/gaffer/Desktop/issues",
		"/Users/gaffer/virtualgo/UnitTest.make",
		"/Users/gaffer/Library/LaunchAgents/LaunchQuicksilverAtStartup.plist",
		"/Users/gaffer/virtualgo/output.txt",
		"/Users/gaffer/virtualgo/vectorial/simd4f_neon.h",
		"/Users/gaffer/virtualgo/UnitTest++/Posix/SignalTranslator.cpp",
		"/Users/gaffer/bio.txt",
		"/Users/gaffer/opengl/OpenGL.cpp",
		"/Users/gaffer/virtualgo/build/obj/Debug/CurrentTest.d",
		"/Users/gaffer/virtualgo/build/obj/Debug/TestRunner.d",
		"/Users/gaffer/virtualgo/build/obj/Debug/TimeConstraint.d",
		"/Users/gaffer/Desktop/hosting meeting with OTG",
		"/Users/gaffer/Desktop/hosting meeting with GH",
		"/Users/gaffer/virtualgo/vectorial/simd4f_scalar.h",
		"/Users/gaffer/virtualgo/View.h",
		"/Users/gaffer/git/cubes/client/Render.cpp",
		"/Users/gaffer/git/network/premake4.lua",
		"/Users/gaffer/Desktop/Intersection of Ellipsoids.pdf",
		"/Users/gaffer/git/cubes/PreCompiled.h",
		"/Users/gaffer/virtualgo/vectorial/config.h",
		"/Users/gaffer/git/cubes/shared/Engine.cpp",
		"/Users/gaffer/Downloads/scoopr-vectorial-85caa38/README",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Core/Stone.h",
		"/Users/gaffer/Desktop/Biconvex.h",
		"/Users/gaffer/git/network/ruby/shortcuts.rb",
		"/Users/gaffer/git/network/src/netGameModeData.cpp",
		"/Users/gaffer/git/network/include/netGameModeData.h",
		"/Users/gaffer/git/network/test/TestGameModeData.cpp",
		"/Users/gaffer/git/network/ruby/gameModes.rb",
		"/Users/gaffer/git/network/TODO",
		"/Users/gaffer/git/network/CHANGES",
		"/Users/gaffer/git/network/data/wads/network/GameModes.json",
		"/Users/gaffer/git/network/shadow/netMake.txt",
		"/Users/gaffer/git/network/shadow/m4/GameModes.net.29486",
		"/Users/gaffer/git/network/include/netShortcutData.h",
		"/Users/gaffer/git/network/test/TestShortcutData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Events.net",
		"/Users/gaffer/git/network/data/GameModes.net",
		"/Users/gaffer/git/network/data/Shortcuts.net",
		"/Users/gaffer/git/network/ALPHA",
		"/Users/gaffer/git/network/data/wads/network/Shortcuts.json",
		"/Users/gaffer/git/network/build/Generated.make",
		"/Users/gaffer/git/network/ruby/subWads.rb",
		"/Users/gaffer/git/network/include/netSubWadData.h",
		"/Users/gaffer/git/network/src/netSubWadData.cpp",
		"/Users/gaffer/git/network/test/TestSubWadData.h",
		"/Users/gaffer/git/network/test/TestSubWadData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Header.net",
		"/Users/gaffer/git/network/data/SubWads.net",
		"/Users/gaffer/git/network/data/wads/network/SubWads.json",
		"/Users/gaffer/git/network/ruby/netQuery.rb",
		"/Users/gaffer/git/network/TASKS",
		"/Users/gaffer/git/network/src/netTransportLAN.cpp",
		"/Users/gaffer/Desktop/community plan: game to web",
		"/Users/gaffer/git/network/shadow/Shortcuts.txt",
		"/Users/gaffer/git/network/ruby/common.rb",
		"/Users/gaffer/git/network/ruby/levels.rb",
		"/Users/gaffer/git/network/incoming/mpScriptingManager.cpp"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"PROVISION",
			"PROVISIONING",
			"_selectOffset",
			"_selectDepth",
			"select",
			"_selectIntersectionPoint",
			"_selectIntersection",
			"selectDepth",
			"timetamp",
			"_selected",
			"_select",
			"Mesh",
			"holdStarted",
			"LaunchMomentum",
			"HoldThreshold",
			"updateTouch",
			"handleSwipe",
			"swipeStart",
			"handleSwipe",
			"_inverse",
			"_clipMatrix",
			"GetPickRay",
			"PickRay",
			"GetMousePickRay",
			"GetMousePickRay\nGetMousePickRay",
			"GetMousePickRay",
			"GetMousePickRay\nGetMousePickRay",
			"GetMousePickRay",
			"updatePhysics",
			"u = ",
			"updateTouch",
			"updatePhysics",
			"updatePhyscis",
			"updatePhysics",
			"updateTouch",
			"touchesBegan",
			"dropStone",
			"frustum",
			"iteratively",
			"_clipMatrix",
			"Plane",
			"dropStone",
			"_stone",
			"Frustum",
			"0.5",
			"drop",
			"Jerk",
			"gravity",
			"LookAt",
			"_rotation",
			"inertiaTensor",
			"InertiaTensor",
			"CollisionResponse",
			"Go",
			"cross",
			"lights",
			"_CW",
			"CCW",
			".up",
			"camera",
			"axis",
			"stoneSizes",
			"stone",
			"DetermineStoneBoardRegion",
			"ClosestFeaturePrimarySurface",
			"cross",
			"Primary",
			"0,1,0",
			"left",
			"0,1,0",
			"Support",
			"scrollY",
			"scrollX",
			"deltaAngle",
			"scrollX",
			"deltaAngle",
			"IntersectStoneBoard",
			"\n\nIntersectStoneBoard",
			"\nIntersectStoneBoard",
			"IntersectStoneBoard",
			"ClosestFeaturesStoneBoard",
			"ASSERTasse",
			"rigidBody.",
			"todo",
			"glColor",
			"Ambient",
			"rotation",
			"LIGHT",
			"RenderStone",
			"rotation",
			"setup light",
			"LIGHT",
			"world velocity",
			"inverseInertiaTensor",
			"inertiaTensor",
			"max",
			"AngularCollision",
			"frame",
			"PBO",
			"num",
			"%",
			"RandomNoSpin",
			"printf",
			"PointInside",
			"doublefloat",
			"CalculateBiconvexInertiaTensor",
			"Inertia",
			"angularMomentum += ",
			"axisRotation",
			"boardContact",
			"collided",
			"StoneBoardCollision",
			"prevOne",
			"RandomStone",
			"RestoreDefaults",
			"RandomStone",
			"LinearCollisionResponse",
			"RandomStone",
			"int main",
			"TEXTURE",
			"RollingFriction",
			"Textured",
			"Texture",
			"scrollX",
			"LIGHT4",
			"Support",
			"frame ",
			"snapshotAccum"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"project": "VirtualGo.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"changes",
				"CHANGES"
			],
			[
				"todo",
				"TODO"
			],
			[
				"intersection.h",
				"Intersection.h"
			],
			[
				"view",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"collision.cpp",
				"Collision.cpp"
			],
			[
				"collisiondetection.h",
				"CollisionDetection.h"
			],
			[
				"render.h",
				"Render.h"
			],
			[
				"rigidbody.h",
				"RigidBody.h"
			],
			[
				"",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"mesh.h",
				"Mesh.h"
			],
			[
				"stone.h",
				"Stone.h"
			],
			[
				"mat4f.h",
				"vectorial/mat4f.h"
			],
			[
				"common.h",
				"Common.h"
			],
			[
				"platform.h",
				"Platform.h"
			],
			[
				"viewcontroller.m",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"viewcontroller.h",
				"xcode/Virtual Go/ViewController.h"
			],
			[
				"dropstone",
				"~/Dropbox/talks/gdc2009/sandbox/source/Render.h"
			],
			[
				"collisionresponse.h",
				"CollisionResponse.h"
			],
			[
				"vec4f.h",
				"vectorial/vec4f.h"
			],
			[
				"biconvex.h",
				"Biconvex.h"
			],
			[
				"simd4x4f.h",
				"vectorial/simd4x4f.h"
			],
			[
				"support.cpp",
				"Support.cpp"
			],
			[
				"tessellation.cpp",
				"Tessellation.cpp"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"inertiatensor.h",
				"InertiaTensor.h"
			],
			[
				".up",
				"VirtualGo.sublime-project"
			],
			[
				"go.cpp",
				"VirtualGo.cpp"
			],
			[
				"board.h",
				"Board.h"
			],
			[
				"colliionresponse.h",
				"CollisionResponse.h"
			],
			[
				"dynamics.cpp",
				"Dynamics.cpp"
			],
			[
				"rigidbod.h",
				"RigidBody.h"
			],
			[
				"virtualgo.cpp",
				"VirtualGo.cpp"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"mat4f",
				"vectorial/mat4f.h"
			],
			[
				"stb_image.c",
				"stb_image.c"
			],
			[
				"config.h",
				"Config.h"
			],
			[
				"platform.cpp",
				"Platform.cpp"
			],
			[
				"pre",
				"premake4.lua"
			],
			[
				"stb",
				"stb_image.c"
			],
			[
				"virtuago.cpp",
				"VirtualGo.cpp"
			],
			[
				"unittest.cpp",
				"UnitTest.cpp"
			],
			[
				"vitualgo.cpp",
				"VirtualGo.cpp"
			],
			[
				"tess",
				"Tessellation.cpp"
			],
			[
				"talk",
				"TALK"
			],
			[
				"picking.cpp",
				"Picking.cpp"
			],
			[
				"mesh",
				"Mesh.h"
			],
			[
				"collisiondet",
				"CollisionDetection.h"
			],
			[
				"collision.h",
				"Collision.h"
			],
			[
				"tdo",
				"TODO"
			],
			[
				"simd4f.h",
				"vectorial/simd4f.h"
			],
			[
				"simd",
				"vectorial/simd4x4f.h"
			],
			[
				"diagrams",
				"DIAGRAMS"
			],
			[
				"tesselation.cpp",
				"Tessellation.cpp"
			],
			[
				"dia",
				"DIAGRAMS"
			],
			[
				"di",
				"DIAGRAMS"
			],
			[
				"art",
				"ARTICLES"
			],
			[
				"articles",
				"ARTICLES"
			],
			[
				"comomn.h",
				"vectorial/simd4f_common.h"
			],
			[
				"simd4f_sse.h",
				"vectorial/simd4f_sse.h"
			],
			[
				"vec3f",
				"vectorial/vec3f.h"
			],
			[
				"comm",
				"Common.h"
			],
			[
				"prem",
				"premake4.lua"
			],
			[
				"intersect.",
				"Intersection.h"
			],
			[
				"vec3f.h",
				"vectorial/vec3f.h"
			],
			[
				"output.txt",
				"output.txt"
			],
			[
				"output.tx",
				"output.txt"
			],
			[
				"out",
				"output.txt"
			],
			[
				"con",
				"Config.h"
			],
			[
				"plat",
				"Platform.h"
			],
			[
				"done",
				"build/obj/Debug/TestRunner.d"
			],
			[
				"sim",
				"vectorial/simd4x4f.h"
			],
			[
				"mat",
				"vectorial/mat4f.h"
			],
			[
				"simd4x4",
				"vectorial/simd4x4f.h"
			],
			[
				"view.h",
				"View.h"
			],
			[
				"pm",
				"premake4.lua"
			],
			[
				"lua",
				"premake4.lua"
			],
			[
				"gamemodes.json",
				"data/wads/network/GameModes.json"
			],
			[
				"testgamemodedata.cpp",
				"test/TestGameModeData.cpp"
			],
			[
				"netgamemodedata.h",
				"include/netGameModeData.h"
			],
			[
				"netgamemodedata.cpp",
				"src/netGameModeData.cpp"
			],
			[
				"netmake.txt",
				"shadow/netMake.txt"
			],
			[
				"gamemodes.rb",
				"ruby/gameModes.rb"
			],
			[
				"events.net",
				"ruby/ndl/Events.net"
			],
			[
				"gamemodes.net",
				"data/GameModes.net"
			],
			[
				"alpha",
				"ALPHA"
			],
			[
				"shortcuts.net",
				"data/Shortcuts.net"
			],
			[
				"testshortcutdata.cpp",
				"test/TestShortcutData.cpp"
			],
			[
				"netshortcutdata.h",
				"include/netShortcutData.h"
			],
			[
				"shortcuts.json",
				"data/wads/network/Shortcuts.json"
			],
			[
				"generate",
				"build/Generated.make"
			],
			[
				"shortcuts.rb",
				"ruby/shortcuts.rb"
			],
			[
				"subwads.rb",
				"ruby/subWads.rb"
			],
			[
				"subwads.net",
				"data/SubWads.net"
			],
			[
				"header.net",
				"ruby/ndl/Header.net"
			],
			[
				"subwads.json",
				"data/wads/network/SubWads.json"
			],
			[
				"testsubwaddata.cpp",
				"test/TestSubWadData.cpp"
			],
			[
				"netsubwaddata.cpp",
				"src/netSubWadData.cpp"
			],
			[
				"netsubwaddata.h",
				"include/netSubWadData.h"
			],
			[
				"testsubwaddata.h",
				"test/TestSubWadData.h"
			],
			[
				"netquery.rb",
				"ruby/netQuery.rb"
			],
			[
				"tasks",
				"TASKS"
			],
			[
				"nettransportlan.cpp",
				"src/netTransportLAN.cpp"
			],
			[
				"shortcuts.txt",
				"shadow/Shortcuts.txt"
			],
			[
				"common.rb",
				"ruby/common.rb"
			],
			[
				"levels.rb",
				"ruby/levels.rb"
			],
			[
				"mpscriptingmanager.h",
				"incoming/mpScriptingManager.h"
			],
			[
				"tsks",
				"TASKS"
			],
			[
				"contants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"constants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"prebuildcpp",
				"test/PreBuild.cpp"
			],
			[
				"data.cpp",
				"test/Data.cpp"
			],
			[
				"prebuild.cpp",
				"test/PreBuild.cpp"
			],
			[
				"filewriter.rb",
				"ruby/fileWriter.rb"
			],
			[
				"netshortcutdata.cpp",
				"src/netShortcutData.cpp"
			],
			[
				"netleveldata.cpp",
				"src/netLevelData.cpp"
			],
			[
				"soaktest.cpp",
				"test/SoakTest.cpp"
			],
			[
				"testdata.h",
				"test/TestData.h"
			],
			[
				"types",
				"include/netTypes.h"
			],
			[
				"testevents.h",
				"test/TestEvents.h"
			],
			[
				"testshortcuts.cpp",
				"test/TestShortcuts.cpp"
			],
			[
				"netmake.rb",
				"ruby/netMake.rb"
			],
			[
				"short",
				"ruby/shortcuts.rb"
			],
			[
				"testgamemode",
				"test/TestGameModeData.h"
			],
			[
				"testsubwads.cpp",
				"test/TestSubWads.cpp"
			],
			[
				"testlevel",
				"test/TestLevelStateMachine.cpp"
			],
			[
				"testlevelstatemachine.h",
				"test/TestLevelStateMachine.h"
			],
			[
				"testgamefixture.cpp",
				"test/TestGameFixture.cpp"
			],
			[
				"testgamefixture.h",
				"test/TestGameFixture.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
