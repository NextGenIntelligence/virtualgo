{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 107.0,
		"selected_items":
		[
			[
				"TODO",
				"Package Control: Discover Packages"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 61.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gaffer/virtualgo/Platform.cpp",
		"/Users/gaffer/virtualgo/VirtualGo.cpp",
		"/Users/gaffer/opengl/OpenGL.cpp",
		"/Users/gaffer/virtualgo/premake4.lua",
		"/Users/gaffer/virtualgo/TODO",
		"/Users/gaffer/virtualgo/CHANGES",
		"/Users/gaffer/virtualgo/vectorial/vec4f.h",
		"/Users/gaffer/virtualgo/vectorial/mat4f.h",
		"/Users/gaffer/virtualgo/Platform.h",
		"/Users/gaffer/virtualgo/obj/Debug/VirtualGo/Platform.d",
		"/Users/gaffer/virtualgo/vectorial/simd4x4f.h",
		"/Users/gaffer/virtualgo/Config.h",
		"/Users/gaffer/virtualgo/build/obj/Debug/CurrentTest.d",
		"/Users/gaffer/virtualgo/build/obj/Debug/TestRunner.d",
		"/Users/gaffer/virtualgo/vectorial/vec3f.h",
		"/Users/gaffer/virtualgo/VirtualGo.sublime-project",
		"/Users/gaffer/virtualgo/build/obj/Debug/TimeConstraint.d",
		"/Users/gaffer/Desktop/hosting meeting with OTG",
		"/Users/gaffer/Desktop/hosting meeting with GH",
		"/Users/gaffer/virtualgo/vectorial/simd4f_scalar.h",
		"/Users/gaffer/virtualgo/View.h",
		"/Users/gaffer/git/cubes/client/Render.cpp",
		"/Users/gaffer/git/network/premake4.lua",
		"/Users/gaffer/Desktop/Intersection of Ellipsoids.pdf",
		"/Users/gaffer/git/cubes/PreCompiled.h",
		"/Users/gaffer/virtualgo/vectorial/config.h",
		"/Users/gaffer/git/cubes/shared/Engine.cpp",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Mathematics/Biconvex.h",
		"/Users/gaffer/Downloads/scoopr-vectorial-85caa38/README",
		"/Users/gaffer/Dropbox/perforce-2006/Projects/Virtual Go/Source/Engine/Core/Stone.h",
		"/Users/gaffer/Desktop/Biconvex.h",
		"/Users/gaffer/git/network/ruby/shortcuts.rb",
		"/Users/gaffer/git/network/src/netGameModeData.cpp",
		"/Users/gaffer/git/network/include/netGameModeData.h",
		"/Users/gaffer/git/network/test/TestGameModeData.cpp",
		"/Users/gaffer/git/network/ruby/gameModes.rb",
		"/Users/gaffer/git/network/TODO",
		"/Users/gaffer/git/network/CHANGES",
		"/Users/gaffer/git/network/data/wads/network/GameModes.json",
		"/Users/gaffer/git/network/shadow/netMake.txt",
		"/Users/gaffer/git/network/shadow/m4/GameModes.net.29486",
		"/Users/gaffer/git/network/include/netShortcutData.h",
		"/Users/gaffer/git/network/test/TestShortcutData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Events.net",
		"/Users/gaffer/git/network/data/GameModes.net",
		"/Users/gaffer/git/network/data/Shortcuts.net",
		"/Users/gaffer/git/network/ALPHA",
		"/Users/gaffer/git/network/data/wads/network/Shortcuts.json",
		"/Users/gaffer/git/network/build/Generated.make",
		"/Users/gaffer/git/network/ruby/subWads.rb",
		"/Users/gaffer/git/network/include/netSubWadData.h",
		"/Users/gaffer/git/network/src/netSubWadData.cpp",
		"/Users/gaffer/git/network/test/TestSubWadData.h",
		"/Users/gaffer/git/network/test/TestSubWadData.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Header.net",
		"/Users/gaffer/git/network/data/SubWads.net",
		"/Users/gaffer/git/network/data/wads/network/SubWads.json",
		"/Users/gaffer/git/network/ruby/netQuery.rb",
		"/Users/gaffer/git/network/TASKS",
		"/Users/gaffer/git/network/src/netTransportLAN.cpp",
		"/Users/gaffer/Desktop/community plan: game to web",
		"/Users/gaffer/git/network/shadow/Shortcuts.txt",
		"/Users/gaffer/git/network/ruby/common.rb",
		"/Users/gaffer/git/network/ruby/levels.rb",
		"/Users/gaffer/git/network/incoming/mpScriptingManager.cpp",
		"/Users/gaffer/git/network/incoming/mpScriptingManager.h",
		"/Users/gaffer/git/network/incoming/mpAuthorityManager.cpp",
		"/Users/gaffer/git/network/incoming/mpDebug.cpp",
		"/Users/gaffer/git/network/incoming/mpInventoryManager.cpp",
		"/Users/gaffer/TASKS",
		"/Users/gaffer/git/network/incoming/mpState.cpp",
		"/Users/gaffer/git/network/incoming/mpVariableManager.cpp",
		"/Users/gaffer/git/network/src/netLevelData.cpp",
		"/Users/gaffer/git/network/incoming/mpTypes.h",
		"/Users/gaffer/git/network/incoming/mpStateManager.cpp",
		"/Users/gaffer/git/network/test/TestProtocol.cpp",
		"/Users/gaffer/git/network/incoming/mpCreatureManager.cpp",
		"/Users/gaffer/git/network/include/netUtil.h",
		"/Users/gaffer/git/network/include/netDataLanguage.h",
		"/Users/gaffer/git/network/incoming/Multiplayer.cpp",
		"/Users/gaffer/git/network/ruby/whoops.txt",
		"/Users/gaffer/git/network/incoming/Network.cpp",
		"/Users/gaffer/git/network/ruby/ndl/Constants.net",
		"/Users/gaffer/git/network/include/netTime.h",
		"/Users/gaffer/git/network/incoming/mpInterface.cpp",
		"/Users/gaffer/git/network/incoming/mpPlayerManager.cpp",
		"/Users/gaffer/git/network/incoming/mpShortcutsManager.cpp",
		"/Users/gaffer/git/network/incoming/mpDefinitions.h",
		"/Users/gaffer/git/network/test/Data.cpp",
		"/Users/gaffer/git/network/test/PreBuild.cpp",
		"/Users/gaffer/git/network/test/UnitTest.cpp",
		"/Users/gaffer/git/network/ruby/fileWriter.rb",
		"/Users/gaffer/git/network/include/netTransportLAN.h",
		"/Users/gaffer/git/network/src/netShortcutData.cpp",
		"/Users/gaffer/git/network/test/SoakTest.cpp",
		"/Users/gaffer/git/network/include/netProtocol.h",
		"/Users/gaffer/git/network/test/TestGameFixture.h",
		"/Users/gaffer/git/network/src/netProtocol.cpp",
		"/Users/gaffer/git/network/include/netTypes.h",
		"/Users/gaffer/git/network/test/TestData.h",
		"/Users/gaffer/git/network/test/TestEvents.h",
		"/Users/gaffer/git/network/include/netInterface.h",
		"/Users/gaffer/git/network/test/untitled",
		"/Users/gaffer/git/network/test/TestShortcuts.cpp",
		"/Users/gaffer/git/network/ruby/netMake.rb",
		"/Users/gaffer/git/network/ruby/enums.rb",
		"/Users/gaffer/git/network/ruby/constants.rb",
		"/Users/gaffer/git/network/ruby/scoring.rb",
		"/Users/gaffer/git/network/ruby/types.rb",
		"/Users/gaffer/git/network/ruby/variables.rb",
		"/Users/gaffer/git/network/data/wads/network/GameModes.csv",
		"/Users/gaffer/git/network/data/wads/network/BaseWads.csv",
		"/Users/gaffer/git/network/data/wads/network/Levels.json",
		"/Users/gaffer/git/network/test/TestGameModeData.h",
		"/Users/gaffer/git/network/test/TestLevelData.h",
		"/Users/gaffer/git/network/test/TestTokenManager.cpp",
		"/Users/gaffer/git/network/test/TestLevelStateMachine.h",
		"/Users/gaffer/git/network/test/TestLevelStateMachine.cpp",
		"/Users/gaffer/git/network/test/TestSubWads.cpp",
		"/Users/gaffer/git/network/src/netLevelStateMachine.cpp",
		"/Users/gaffer/git/network/test/TestLevelData.cpp",
		"/Users/gaffer/git/network/test/TestGameFixture.cpp",
		"/Users/gaffer/git/network/build/obj/x64/Debug/UnitTest++/MemoryOutStream.d",
		"/Users/gaffer/git/network/include/netLevelData.h",
		"/Users/gaffer/git/network/include/netLevelStateMachine.h",
		"/Users/gaffer/git/network/shadow/SubWads.txt",
		"/Users/gaffer/git/network/test/TestNDL.cpp",
		"/Users/gaffer/git/network/include/netDataTypes.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"velocityIntoContact",
			"const float r =",
			"float r =",
			"e =",
			"printf",
			"ApplyImpulse",
			"r =",
			"GetVelocityAtPoint",
			"VelocityatPoint",
			"Bisect",
			"printf",
			"TransformPlane",
			"planeDistance",
			"Bisect",
			"Bisection",
			"prevEnter",
			"enter",
			"+=",
			"Bisect",
			"IntersectStoneBoard",
			"stoneRigidBody",
			"Angula",
			"struct quat4f",
			"Spin",
			".space",
			"struct RigidBody",
			"IntersectBoard",
			"IntersectRayBoard",
			"IntersectBoard",
			"IntersectStoneRay",
			"IntersectBoard",
			"Intersect",
			"IntersectBoardRay",
			"IntersetBoardRay",
			"Board",
			"IntersectRayBoard",
			"Support",
			"ortho",
			"Support_",
			"biconvexUp",
			"Support",
			"Span",
			"IntersectPlaneBiconvex_LocalSpace",
			"IntersectStoneBoard",
			"rotation = ",
			"BiconvexTransform",
			"IntersectPlaneBiconvex_Local",
			"sphereDot = ",
			"IntersectBiconvexPlane",
			"IntersectPlaneBiconvex",
			"GetSphereDot",
			"IntersectStoneRay",
			"IntersectPlaneBiconvex_LocalSpace",
			"Board board",
			"mouse_y",
			"mouse_x",
			"ShowMouse",
			"Point",
			"quit",
			"quitEvent",
			"TransformVector",
			"IntersectRayBiconvex",
			"TransformNora",
			"StoneBoard",
			"Intersect",
			"anti",
			"CloseDisplay",
			"PrintMatrix",
			"PrintVector",
			"simd4x4f_axis_rotation",
			"IntersectStoneBoard",
			"TransformPoint",
			"WorldToLocal",
			"IntersectPlaneBiconvex",
			"2.",
			"PlaneTo",
			"PlanoTo",
			".position",
			"StoneBoard",
			"#endif",
			"simd4x4f_lookat",
			"Quat",
			"IntersectBiconvexPlane",
			"_span",
			"sphereDot",
			"_sat",
			"direction",
			"GetWidth() / 2",
			"width / 2",
			"width /2",
			"vectorial::",
			"vec",
			"Version",
			"generate",
			"Version",
			"lams",
			"BaseWad.new",
			"shortcut",
			"dump",
			"generate",
			"phaseWadsBuilt",
			"subwads",
			"levelInfo",
			"@levelInfo",
			"NEW_SPAWN_BRANCH",
			"Version",
			"@version",
			"Version",
			"levelWads",
			"levelBuilt",
			"built =",
			"MaxBaseWads",
			"NETSEC",
			"NETBAD",
			"NETSEC",
			"NETSEC-",
			"NETSPU",
			"NETPPU",
			"NETOPT",
			"NETTODO",
			"NETHACK",
			"UserError ",
			"mkdir",
			"bin",
			"shadow",
			"$bits",
			"netMake",
			"= 4"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"virtualgo.cpp",
				"VirtualGo.cpp"
			],
			[
				"platform.cpp",
				"Platform.cpp"
			],
			[
				"pre",
				"premake4.lua"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"todo",
				"TODO"
			],
			[
				"vec4f.h",
				"vectorial/vec4f.h"
			],
			[
				"mat4f.h",
				"vectorial/mat4f.h"
			],
			[
				"platform.h",
				"Platform.h"
			],
			[
				"con",
				"Config.h"
			],
			[
				"plat",
				"Platform.h"
			],
			[
				"done",
				"build/obj/Debug/TestRunner.d"
			],
			[
				"sim",
				"vectorial/simd4x4f.h"
			],
			[
				"vec3f.h",
				"vectorial/vec3f.h"
			],
			[
				"simd",
				"vectorial/simd4x4f.h"
			],
			[
				"mat4f",
				"vectorial/mat4f.h"
			],
			[
				"mat",
				"vectorial/mat4f.h"
			],
			[
				"simd4x4",
				"vectorial/simd4x4f.h"
			],
			[
				"view.h",
				"View.h"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"prem",
				"premake4.lua"
			],
			[
				"pm",
				"premake4.lua"
			],
			[
				"lua",
				"premake4.lua"
			],
			[
				"gamemodes.json",
				"data/wads/network/GameModes.json"
			],
			[
				"testgamemodedata.cpp",
				"test/TestGameModeData.cpp"
			],
			[
				"netgamemodedata.h",
				"include/netGameModeData.h"
			],
			[
				"netgamemodedata.cpp",
				"src/netGameModeData.cpp"
			],
			[
				"netmake.txt",
				"shadow/netMake.txt"
			],
			[
				"gamemodes.rb",
				"ruby/gameModes.rb"
			],
			[
				"events.net",
				"ruby/ndl/Events.net"
			],
			[
				"gamemodes.net",
				"data/GameModes.net"
			],
			[
				"alpha",
				"ALPHA"
			],
			[
				"shortcuts.net",
				"data/Shortcuts.net"
			],
			[
				"testshortcutdata.cpp",
				"test/TestShortcutData.cpp"
			],
			[
				"netshortcutdata.h",
				"include/netShortcutData.h"
			],
			[
				"shortcuts.json",
				"data/wads/network/Shortcuts.json"
			],
			[
				"generate",
				"build/Generated.make"
			],
			[
				"shortcuts.rb",
				"ruby/shortcuts.rb"
			],
			[
				"subwads.rb",
				"ruby/subWads.rb"
			],
			[
				"subwads.net",
				"data/SubWads.net"
			],
			[
				"header.net",
				"ruby/ndl/Header.net"
			],
			[
				"subwads.json",
				"data/wads/network/SubWads.json"
			],
			[
				"testsubwaddata.cpp",
				"test/TestSubWadData.cpp"
			],
			[
				"netsubwaddata.cpp",
				"src/netSubWadData.cpp"
			],
			[
				"netsubwaddata.h",
				"include/netSubWadData.h"
			],
			[
				"testsubwaddata.h",
				"test/TestSubWadData.h"
			],
			[
				"netquery.rb",
				"ruby/netQuery.rb"
			],
			[
				"tasks",
				"TASKS"
			],
			[
				"nettransportlan.cpp",
				"src/netTransportLAN.cpp"
			],
			[
				"shortcuts.txt",
				"shadow/Shortcuts.txt"
			],
			[
				"common.rb",
				"ruby/common.rb"
			],
			[
				"levels.rb",
				"ruby/levels.rb"
			],
			[
				"mpscriptingmanager.h",
				"incoming/mpScriptingManager.h"
			],
			[
				"tsks",
				"TASKS"
			],
			[
				"contants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"constants.net",
				"ruby/ndl/Constants.net"
			],
			[
				"unittest.cpp",
				"test/UnitTest.cpp"
			],
			[
				"prebuildcpp",
				"test/PreBuild.cpp"
			],
			[
				"data.cpp",
				"test/Data.cpp"
			],
			[
				"prebuild.cpp",
				"test/PreBuild.cpp"
			],
			[
				"",
				"ruby/fileWriter.rb"
			],
			[
				"filewriter.rb",
				"ruby/fileWriter.rb"
			],
			[
				"netshortcutdata.cpp",
				"src/netShortcutData.cpp"
			],
			[
				"netleveldata.cpp",
				"src/netLevelData.cpp"
			],
			[
				"soaktest.cpp",
				"test/SoakTest.cpp"
			],
			[
				"testdata.h",
				"test/TestData.h"
			],
			[
				"types",
				"include/netTypes.h"
			],
			[
				"testevents.h",
				"test/TestEvents.h"
			],
			[
				"testshortcuts.cpp",
				"test/TestShortcuts.cpp"
			],
			[
				"netmake.rb",
				"ruby/netMake.rb"
			],
			[
				"short",
				"ruby/shortcuts.rb"
			],
			[
				"testgamemode",
				"test/TestGameModeData.h"
			],
			[
				"testsubwads.cpp",
				"test/TestSubWads.cpp"
			],
			[
				"testlevel",
				"test/TestLevelStateMachine.cpp"
			],
			[
				"testlevelstatemachine.h",
				"test/TestLevelStateMachine.h"
			],
			[
				"testgamefixture.cpp",
				"test/TestGameFixture.cpp"
			],
			[
				"testgamefixture.h",
				"test/TestGameFixture.h"
			],
			[
				"tood",
				"build/obj/x64/Debug/UnitTest++/MemoryOutStream.d"
			],
			[
				"testtokenmanager.cpp",
				"test/TestTokenManager.cpp"
			],
			[
				"testleveldata.h",
				"test/TestLevelData.h"
			],
			[
				"testleveldata.cpp",
				"test/TestLevelData.cpp"
			],
			[
				"netlevelstatemachine.h",
				"include/netLevelStateMachine.h"
			],
			[
				"netlevelstatemachine.cpp",
				"src/netLevelStateMachine.cpp"
			],
			[
				"netleveldata.h",
				"include/netLevelData.h"
			],
			[
				"testgameod",
				"test/TestGameModeData.h"
			],
			[
				"netsubwad",
				"src/netSubWadData.cpp"
			],
			[
				"subwads",
				"shadow/SubWads.txt"
			],
			[
				"gamemode.rb",
				"ruby/gameModes.rb"
			],
			[
				"testgamem",
				"test/TestGameModeData.h"
			],
			[
				"netmke.rb",
				"ruby/netMake.rb"
			],
			[
				"testgamemodedata.h",
				"test/TestGameModeData.h"
			],
			[
				"testgamemode.cpp",
				"test/TestGameModeData.cpp"
			],
			[
				"netprotocol.cpp",
				"src/netProtocol.cpp"
			],
			[
				"constants.rb",
				"ruby/constants.rb"
			],
			[
				"testndl.cpp",
				"test/TestNDL.cpp"
			],
			[
				"testlevelstatemachine.cpp",
				"test/TestLevelStateMachine.cpp"
			],
			[
				"testgame",
				"test/TestGameModeData.h"
			],
			[
				"netconfig.h",
				"include/netConfig.h"
			],
			[
				"gamemodes",
				"shadow/m4/GameModes.net.14152"
			],
			[
				"enums.net",
				"ruby/ndl/Enums.net"
			],
			[
				"read",
				"README"
			],
			[
				"netserialize.h",
				"include/netSerialize.h"
			],
			[
				"nettablemanager.h",
				"include/netTableManager.h"
			],
			[
				"netrecorder.h",
				"include/netRecorder.h"
			],
			[
				"testas",
				"test/TestAsyncSockets.cpp"
			],
			[
				"nettime.h",
				"include/netTime.h"
			],
			[
				"netlog.cpp",
				"src/netLog.cpp"
			],
			[
				"netlog.h",
				"include/netLog.h"
			],
			[
				"netsem",
				"include/netSemaphore.h"
			],
			[
				"netsemaphore.cpp",
				"src/netSemaphore.cpp"
			],
			[
				"testasync.cp",
				"test/TestAsyncSockets.cpp"
			],
			[
				"netsemaphore.h",
				"include/netSemaphore.h"
			],
			[
				"netsockets.cpp",
				"src/netSockets.cpp"
			],
			[
				"netconfig.",
				"include/netConfig.h"
			],
			[
				"netthread.cpp",
				"src/netThread.cpp"
			],
			[
				"netthread.h",
				"include/netThread.h"
			],
			[
				"testasync",
				"test/TestAsyncSockets.cpp"
			],
			[
				"lannode.cpp",
				"src/lanNode.cpp"
			],
			[
				"netsockets.h",
				"include/netSockets.h"
			],
			[
				"lannode.h",
				"include/lanNode.h"
			],
			[
				"lanmesh.h",
				"include/lanMesh.h"
			],
			[
				"lanmesh.cpp",
				"src/lanMesh.cpp"
			],
			[
				"output",
				"bin/output.txt"
			],
			[
				"mesh.",
				"src/lanMesh.cpp"
			],
			[
				"protocolconstants.h",
				"include/ProtocolConstants.h"
			],
			[
				"protocoluser.h",
				"include/ProtocolUser.h"
			],
			[
				"testmesh",
				"test/TestNodeMesh.cpp"
			],
			[
				"testnodemesh.cpp",
				"test/TestNodeMesh.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true
}
